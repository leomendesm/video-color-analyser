export interface Filter {
    (red: number, green: number, blue: number, alpha: number): boolean;
}
export declare type Vec3 = [number, number, number];
export interface Palette {
    Vibrant: Swatch | null;
    Muted: Swatch | null;
    DarkVibrant: Swatch | null;
    DarkMuted: Swatch | null;
    LightVibrant: Swatch | null;
    LightMuted: Swatch | null;
    [name: string]: Swatch | null;
}
export declare class Swatch {
    static applyFilters(colors: Swatch[], filters: Filter[]): Swatch[];
    static clone(swatch: Swatch): Swatch;
    private _hsl;
    private _rgb;
    private _yiq;
    private _population;
    private _hex;
    readonly r: number;
    readonly g: number;
    readonly b: number;
    readonly rgb: Vec3;
    readonly hsl: Vec3;
    readonly hex: string;
    readonly population: number;
    toJSON(): {
        rgb: [number, number, number];
        population: number;
    };
    getRgb(): Vec3;
    getHsl(): Vec3;
    getPopulation(): number;
    getHex(): string;
    private getYiq;
    private _titleTextColor;
    private _bodyTextColor;
    readonly titleTextColor: string;
    readonly bodyTextColor: string;
    getTitleTextColor(): string;
    getBodyTextColor(): string;
    constructor(rgb: Vec3, population: number);
}
